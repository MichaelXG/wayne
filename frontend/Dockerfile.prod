# üîπ Usa Node.js Alpine para build otimizada
FROM node:20 AS builder

# Define o diret√≥rio de trabalho
WORKDIR /app

# Copia apenas arquivos essenciais primeiro para cache eficiente
COPY package.json yarn.lock ./

# Instala depend√™ncias no modo produ√ß√£o
RUN yarn install --frozen-lockfile --prefer-offline

# Copia os arquivos restantes
COPY . .

# Faz o build do Next.js
RUN yarn build

# üîπ Cria a imagem final otimizada para produ√ß√£o
FROM node:20

# Define diret√≥rio de trabalho
WORKDIR /app

# Cria um usu√°rio seguro
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

# Copia apenas os arquivos necess√°rios para rodar em produ√ß√£o
COPY --from=builder /app/package.json /app/yarn.lock ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/public ./public

# Define a vari√°vel de ambiente para produ√ß√£o
ENV NODE_ENV=production

# Exp√µe a porta padr√£o do Next.js
EXPOSE 3000

# Inicia o servidor Next.js em produ√ß√£o
CMD ["yarn", "start"]
