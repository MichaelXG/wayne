# ✅ Usa Python 3.11-slim como base
FROM python:3.11-slim

# ✅ Define o diretório de trabalho
WORKDIR /app
RUN echo "📂 Diretório de trabalho definido como /app"

# ✅ Atualiza pacotes e instala dependências essenciais
RUN echo "📦 Atualizando pacotes e instalando dependências..." && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        sqlite3 \
        dos2unix \
        python3-venv \
        procps && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    echo "✅ Dependências do sistema instaladas!"

# ✅ Copia arquivos essenciais
COPY requirements.txt /app/
COPY .env /app/.env
COPY entrypoint.sh /app/
COPY . /app/

# ✅ Ajusta permissões e converte arquivos
RUN echo "🔒 Ajustando permissões e convertendo arquivos..." && \
    chmod -R 755 /app && \
    for f in .env entrypoint.sh; do \
        if [ -f "/app/$f" ]; then \
            echo "✅ $f encontrado! Convertendo para UNIX..."; \
            dos2unix "/app/$f" || true; \
            [ "$f" = "entrypoint.sh" ] && chmod +x "/app/$f"; \
            echo "✅ $f pronto!"; \
        else \
            echo "⚠️ $f não encontrado!"; \
        fi; \
    done

# ✅ Atualiza pip, setuptools e wheel
RUN echo "🔄 Atualizando pip, setuptools e wheel..." && \
    pip install --no-cache-dir --upgrade pip setuptools wheel

# ✅ Instala dependências Python
RUN echo "🚀 Instalando dependências do projeto..." && \
    pip install --no-cache-dir --upgrade-strategy eager -r /app/requirements.txt --timeout=1000 && \
    echo "✅ Dependências Python instaladas com sucesso!"

# ✅ Expondo porta padrão
EXPOSE 8000
RUN echo "🌐 Porta 8000 exposta para o backend!"

# ✅ Confirma finalização da configuração
RUN echo "🚀 Docker container configurado com sucesso e pronto para execução!"

# ✅ Define o comando padrão de execução
# Para ambiente de desenvolvimento, descomente a linha abaixo:
# CMD ["/bin/bash", "/app/entrypoint.sh"]

# Para ambiente de produção, com Gunicorn:
CMD ["gunicorn", "-b", "0.0.0.0:8000", "wayne_backend.wsgi:application", "--workers=3", "--timeout=120"]
