version: '3.9'

services:
  redis:
    image: redis:alpine
    container_name: redis-wayne
    ports:
      - "127.0.0.1:6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme} --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    security_opt:
      - no-new-privileges:true
    networks:
      - wayne_network

  django_wayne_app:
    build:
      context: ./backend
      dockerfile: Dockerfile.${NODE_ENV:-dev}
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: django_wayne_app
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - ./backend:/app:cached
      - sqlite_data:/app/db:delegated
      - static_data:/app/staticfiles:cached
    env_file:
      - ./backend/.env
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=wayne_backend.settings
      - FORCE_CLEAN=${FORCE_CLEAN:-false}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-changeme}@redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 180s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: ${BACKEND_MEMORY_LIMIT:-2GB}
        reservations:
          cpus: '0.5'
          memory: ${BACKEND_MEMORY_RESERVATION:-1GB}
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    command: ["/app/entrypoint.sh"]
    networks:
      - wayne_network

  vite_wayne_app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.${NODE_ENV:-dev}
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: vite_wayne_app
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      django_wayne_app:
        condition: service_healthy
    volumes:
      - ./frontend:/app:cached
      - node_modules:/app/node_modules:delegated
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_PORT=3000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: ${FRONTEND_MEMORY_LIMIT:-2GB}
        reservations:
          cpus: '0.25'
          memory: ${FRONTEND_MEMORY_RESERVATION:-1GB}
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: sh -c "yarn install --frozen-lockfile --network-timeout 100000 && yarn dev"
    networks:
      - wayne_network

volumes:
  sqlite_data:
    driver: local
  static_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  wayne_network:
    driver: bridge
    internal: false
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
