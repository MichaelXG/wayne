services:
  redis:
    image: redis:alpine
    container_name: redis-wayne
    ports:
      - "6379:6379"

  django_wayne_app:
    build:
      context: ./backend
      dockerfile: Dockerfile.${NODE_ENV:-dev}
    container_name: django_wayne_app
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app:cached
      - sqlite_data:/app/db
      - static_data:/app/staticfiles
    env_file:
      - ./backend/.env
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=wayne_backend.settings
      - FORCE_CLEAN=${FORCE_CLEAN:-false}
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 200s
    deploy:
      resources:
        limits:
          memory: ${BACKEND_MEMORY_LIMIT:-2GB}
        reservations:
          memory: ${BACKEND_MEMORY_RESERVATION:-1GB}
    command: sh -c "/app/entrypoint.sh"
  vite_wayne_app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.${NODE_ENV:-dev}
    container_name: vite_wayne_app
    ports:
      - "3000:3000"
    depends_on:
      django_wayne_app:
        condition: service_healthy
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_PORT=3000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api
    deploy:
      resources:
        limits:
          memory: ${FRONTEND_MEMORY_LIMIT:-2GB}
        reservations:
          memory: ${FRONTEND_MEMORY_RESERVATION:-1GB}
    command: sh -c "yarn install --frozen-lockfile && yarn dev"

volumes:
  sqlite_data:
  static_data:
